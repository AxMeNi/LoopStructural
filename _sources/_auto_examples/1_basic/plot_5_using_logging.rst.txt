
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/1_basic/plot_5_using_logging.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__auto_examples_1_basic_plot_5_using_logging.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_1_basic_plot_5_using_logging.py:


1e. Using logging
===============================
LoopStructural has a number of levels of logging incorporated in the code to allow 
for recording and debugging the models.
The python logging module allows for 5 levels of messages to be returned to the user:
1. Debug messages
2. Info messages
3. Warning messages
4. Error messages
5. Critical messages

LoopStructural uses all of these logging levels to report the various aspects of the model
building process. 
Generally, the user only needs to be aware of the warning and error messages. 

By default the warning, error and critical messages are returned to the console and will appear to
the user. 
All messages except for debug are recorded to a file :code:`default-loop-structural-logfile.log`.

Lets have a look at the logging from the Claudius model. 

.. GENERATED FROM PYTHON SOURCE LINES 23-31

.. code-block:: default


    from LoopStructural import GeologicalModel
    from LoopStructural.visualisation import LavaVuModelViewer
    from LoopStructural.datasets import load_claudius  # demo data
    from LoopStructural import log_to_file
    import pandas as pd
    import numpy as np








.. GENERATED FROM PYTHON SOURCE LINES 32-34

Specify a log file
~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: default


    log_to_file("logging_demo_log.log")








.. GENERATED FROM PYTHON SOURCE LINES 38-40

Create model
~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 40-65

.. code-block:: default

    data, bb = load_claudius()
    model = GeologicalModel(bb[0, :], bb[1, :])
    model.set_model_data(data)

    vals = [0, 60, 250, 330, 600]
    strat_column = {"strati": {}}
    for i in range(len(vals) - 1):
        strat_column["strati"]["unit_{}".format(i)] = {
            "min": vals[i],
            "max": vals[i + 1],
            "id": i,
        }
    model.set_stratigraphic_column(strat_column)
    strati = model.create_and_add_foliation(
        "strati",
        interpolatortype="FDI",  # try changing this to 'PLI'
        nelements=1e4,  # try changing between 1e3 and 5e4
        buffer=0.3,
        solver="pyamg",
        damp=True,
    )
    viewer = LavaVuModelViewer(model, background="white")
    viewer.add_model_surfaces()
    viewer.rotate([-85.18760681152344, 42.93233871459961, 0.8641873002052307])
    viewer.display()



.. image-sg:: /_auto_examples/1_basic/images/sphx_glr_plot_5_using_logging_001.png
   :alt: plot 5 using logging
   :srcset: /_auto_examples/1_basic/images/sphx_glr_plot_5_using_logging_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/1 [00:00<?, ?it/s]    Interpolating strati:   0%|          | 0/1 [00:00<?, ?it/s]    Interpolating strati: 100%|##########| 1/1 [00:04<00:00,  4.07s/it]    Interpolating strati: 100%|##########| 1/1 [00:04<00:00,  4.07s/it]
      0%|          | 0/4 [00:00<?, ?it/s]    Isosurfacing strati:   0%|          | 0/4 [00:00<?, ?it/s]    Isosurfacing strati: 100%|##########| 4/4 [00:00<00:00, 55.77it/s]




.. GENERATED FROM PYTHON SOURCE LINES 66-71

Looking at the log file
~~~~~~~~~~~~~~~~~~~~~~~
Here are the first 10 lines of the log file.
Most operations in loopstructural are recorded and this will allow you to identify whether
an operation is not occuring as you would expect.

.. GENERATED FROM PYTHON SOURCE LINES 71-79

.. code-block:: default


    from itertools import islice

    # with open('logging_demo_log.log') as inf:
    #     for line in islice(inf, 0, 11):
    #         print(line)









.. GENERATED FROM PYTHON SOURCE LINES 80-83

Logging to console
~~~~~~~~~~~~~~~~~~
It is also possible to change the logging level for the console log.

.. GENERATED FROM PYTHON SOURCE LINES 83-122

.. code-block:: default


    from LoopStructural import log_to_console

    log_to_console("info")


    from LoopStructural import GeologicalModel
    from LoopStructural.visualisation import LavaVuModelViewer
    from LoopStructural.datasets import load_claudius  # demo data

    import pandas as pd
    import numpy as np


    data, bb = load_claudius()
    model = GeologicalModel(bb[0, :], bb[1, :])
    model.set_model_data(data)

    vals = [0, 60, 250, 330, 600]
    strat_column = {"strati": {}}
    for i in range(len(vals) - 1):
        strat_column["strati"]["unit_{}".format(i)] = {
            "min": vals[i],
            "max": vals[i + 1],
            "id": i,
        }
    model.set_stratigraphic_column(strat_column)
    strati = model.create_and_add_foliation(
        "strati",
        interpolatortype="FDI",  # try changing this to 'PLI'
        nelements=1e4,  # try changing between 1e3 and 5e4
        buffer=0.3,
        solver="pyamg",
        damp=True,
    )
    viewer = LavaVuModelViewer(model, background="white")
    viewer.add_model_surfaces()
    viewer.rotate([-85.18760681152344, 42.93233871459961, 0.8641873002052307])
    viewer.display()



.. image-sg:: /_auto_examples/1_basic/images/sphx_glr_plot_5_using_logging_002.png
   :alt: plot 5 using logging
   :srcset: /_auto_examples/1_basic/images/sphx_glr_plot_5_using_logging_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/1 [00:00<?, ?it/s]    Interpolating strati:   0%|          | 0/1 [00:00<?, ?it/s]    Interpolating strati: 100%|##########| 1/1 [00:03<00:00,  3.99s/it]    Interpolating strati: 100%|##########| 1/1 [00:03<00:00,  4.00s/it]
      0%|          | 0/4 [00:00<?, ?it/s]    Isosurfacing strati:   0%|          | 0/4 [00:00<?, ?it/s]    Isosurfacing strati: 100%|##########| 4/4 [00:00<00:00, 58.09it/s]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  10.217 seconds)


.. _sphx_glr_download__auto_examples_1_basic_plot_5_using_logging.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_5_using_logging.py <plot_5_using_logging.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_5_using_logging.ipynb <plot_5_using_logging.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
