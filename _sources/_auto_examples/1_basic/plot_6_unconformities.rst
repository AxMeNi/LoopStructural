
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_auto_examples/1_basic/plot_6_unconformities.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__auto_examples_1_basic_plot_6_unconformities.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__auto_examples_1_basic_plot_6_unconformities.py:


============================
1f. Unconformities
============================
This tutorial will demonstrate how to add unconformities to a mode using LoopStructural.

.. GENERATED FROM PYTHON SOURCE LINES 8-14

.. code-block:: Python


    from LoopStructural import GeologicalModel
    import pandas as pd
    import numpy as np
    from LoopStructural.visualisation import LavaVuModelViewer








.. GENERATED FROM PYTHON SOURCE LINES 15-18

Generate synthetic data
~~~~~~~~~~~~~~~~~~~~~~~~
Model 3 scalar fields where the top is horizontal, the middle is dipping and the bottom is horizontal.

.. GENERATED FROM PYTHON SOURCE LINES 18-35

.. code-block:: Python

    data = pd.DataFrame(
        [
            [0, 0, 3, 0, 0, 0, 1, "unit_a"],
            [0, 0, 1, 1, 0, 0.7, 0.7, "unit_b"],
            [0, 0, 0, 0, 0, 0.7, 0.7, "unit_b"],
            [0, 0, -3, 0, 0, 0, -1, "unit_c"],
        ],
        columns=["X", "Y", "Z", "val", "nx", "ny", "nz", "feature_name"],
    )

    model = GeologicalModel(np.ones(3) * -5, np.ones(3) * 7)
    model.data = data
    model.create_and_add_foliation("unit_a")
    model.create_and_add_foliation("unit_b")
    model.create_and_add_foliation("unit_c")

    model.update()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/3 [00:00<?, ?it/s]    Interpolating unit_a:   0%|          | 0/3 [00:00<?, ?it/s]    Interpolating unit_b:  33%|███▎      | 1/3 [00:00<00:00, 16.68it/s]    Interpolating unit_b:  67%|██████▋   | 2/3 [00:00<00:00, 16.07it/s]    Interpolating unit_c:  67%|██████▋   | 2/3 [00:00<00:00, 16.07it/s]    Interpolating unit_c: 100%|██████████| 3/3 [00:00<00:00, 16.29it/s]




.. GENERATED FROM PYTHON SOURCE LINES 36-39

Visualise the model without unconformities
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 39-52

.. code-block:: Python


    view = LavaVuModelViewer(model)
    view.add_isosurface(model["unit_a"], nslices=5)
    view.add_isosurface(model["unit_b"], nslices=5)
    view.add_isosurface(model["unit_c"], nslices=5)
    view.camera = {
        "translate": [0.0, 0.0, -20.67],
        "rotate": [-0.562, -0.438, -0.442, 0.544],
        "xyzrotate": [-94.021, -77.018, 2.784],
        "fov": 45.0,
    }
    view.display()




.. image-sg:: /_auto_examples/1_basic/images/sphx_glr_plot_6_unconformities_001.png
   :alt: plot 6 unconformities
   :srcset: /_auto_examples/1_basic/images/sphx_glr_plot_6_unconformities_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    lv.translation(0.0, 0.0, -20.67)
    lv.rotation(-94.021, -77.018, 2.784)




.. GENERATED FROM PYTHON SOURCE LINES 53-63

Add unconformities
~~~~~~~~~~~~~~~~~~
We add two unconformities to the model
1. the isovalue of 0 of unit_a is an unconformity
2. the isovalue of 0 of unit_b is an unconformity

This means unit_a should not occur below isovalue of 0,
unit_b should truncate at unit_a isovalue 0 and
unit_b should not occur below isovalue of 0
and unit_c should not occur below unit_b isovalue of 0

.. GENERATED FROM PYTHON SOURCE LINES 63-72

.. code-block:: Python


    model = GeologicalModel(np.ones(3) * -5, np.ones(3) * 7)
    model.data = data
    model.create_and_add_foliation("unit_a")
    model.add_unconformity(model["unit_a"], 0)
    model.create_and_add_foliation("unit_b")
    model.add_unconformity(model["unit_b"], 0)
    model.create_and_add_foliation("unit_c")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    -----------------------------------------------------
    unit_c 1 
    -----------------------------------------------------
    	1 regions
    	 	<bound method BaseFeature.__str__ of -----------------------------------------------------
    unit_b_unconformity 7 
    -----------------------------------------------------
    	0 regions
    	0 faults.
    	Fault enabled True
    >
    	0 faults.
    	Fault enabled True




.. GENERATED FROM PYTHON SOURCE LINES 73-75

We can examine the model by printing the object
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 75-80

.. code-block:: Python


    print(model)

    model.update()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    GeologicalModel - 12.0 x 12.0 x 12.0
    ------------------------------------------ 
    The model contains 5 GeologicalFeatures 
    ------------------------------------------ 
    Model origin: -5.0 -5.0 -5.0
    Model maximum: 7.0 7.0 7.0
    Model rescale factor: 1.0 
    ------------------------------------------ 
    Feature list: 
      unit_a 
      unit_a_unconformity 
      unit_b 
      unit_b_unconformity 
      unit_c 

      0%|          | 0/3 [00:00<?, ?it/s]    Interpolating unit_a:   0%|          | 0/3 [00:00<?, ?it/s]    Interpolating unit_a_unconformity:  33%|███▎      | 1/3 [00:00<00:00, 17.07it/s]    Interpolating unit_b:  67%|██████▋   | 2/3 [00:00<00:00, 34.05it/s]                 Interpolating unit_b: 100%|██████████| 3/3 [00:00<00:00, 24.64it/s]    Interpolating unit_b_unconformity: 100%|██████████| 3/3 [00:00<00:00, 24.64it/s]    Interpolating unit_c: : 4it [00:00, 24.64it/s]                                      Interpolating unit_c: : 5it [00:00, 27.57it/s]




.. GENERATED FROM PYTHON SOURCE LINES 81-84

Visualise the model without unconformities
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


.. GENERATED FROM PYTHON SOURCE LINES 84-98

.. code-block:: Python


    view = LavaVuModelViewer(model)
    view.add_isosurface(model["unit_a"], nslices=5)
    view.add_isosurface(model["unit_b"], nslices=5)
    view.add_isosurface(model["unit_c"], nslices=5)
    view.camera = {
        "translate": [0.0, 0.0, -20.67],
        "rotate": [-0.562, -0.438, -0.442, 0.544],
        "xyzrotate": [-94.021, -77.018, 2.784],
        "fov": 45.0,
    }
    view.display()





.. image-sg:: /_auto_examples/1_basic/images/sphx_glr_plot_6_unconformities_002.png
   :alt: plot 6 unconformities
   :srcset: /_auto_examples/1_basic/images/sphx_glr_plot_6_unconformities_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    lv.translation(0.0, 0.0, -20.67)
    lv.rotation(-94.021, -77.018, 2.784)




.. GENERATED FROM PYTHON SOURCE LINES 99-103

Adding onlap unconformity
~~~~~~~~~~~~~~~~~~~~~~~~~
We can also add onlap unconformities to the model, using the previous example lets change the unconformity
between b and c to be an onlap. This means the geometry of c truncates b

.. GENERATED FROM PYTHON SOURCE LINES 103-115

.. code-block:: Python



    model = GeologicalModel(np.ones(3) * -5, np.ones(3) * 7)
    model.data = data
    model.create_and_add_foliation("unit_a")
    model.add_unconformity(model["unit_a"], 0)
    model.create_and_add_foliation("unit_b")
    model.create_and_add_foliation("unit_c")
    model.add_onlap_unconformity(model["unit_c"], 0)

    model.update()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/3 [00:00<?, ?it/s]    Interpolating unit_a:   0%|          | 0/3 [00:00<?, ?it/s]    Interpolating unit_a_unconformity:  33%|███▎      | 1/3 [00:00<00:00, 16.95it/s]    Interpolating unit_b:  67%|██████▋   | 2/3 [00:00<00:00, 33.80it/s]                 Interpolating unit_b: 100%|██████████| 3/3 [00:00<00:00, 24.49it/s]    Interpolating unit_c: 100%|██████████| 3/3 [00:00<00:00, 24.49it/s]    Interpolating unit_c_unconformity: : 4it [00:00, 24.49it/s]            Interpolating unit_c_unconformity: : 5it [00:00, 27.47it/s]




.. GENERATED FROM PYTHON SOURCE LINES 116-118

Visualise the model with onlap
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 118-132

.. code-block:: Python


    view = LavaVuModelViewer(model)
    view.add_isosurface(model["unit_a"], nslices=5)
    view.add_isosurface(model["unit_b"], nslices=5)
    view.add_isosurface(model["unit_c"], nslices=5)

    view.camera = {
        "translate": [0.0, 0.0, -20.67],
        "rotate": [-0.562, -0.438, -0.442, 0.544],
        "xyzrotate": [-94.021, -77.018, 2.784],
        "fov": 45.0,
    }

    view.display()



.. image-sg:: /_auto_examples/1_basic/images/sphx_glr_plot_6_unconformities_003.png
   :alt: plot 6 unconformities
   :srcset: /_auto_examples/1_basic/images/sphx_glr_plot_6_unconformities_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    lv.translation(0.0, 0.0, -20.67)
    lv.rotation(-94.021, -77.018, 2.784)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.486 seconds)


.. _sphx_glr_download__auto_examples_1_basic_plot_6_unconformities.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_6_unconformities.ipynb <plot_6_unconformities.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_6_unconformities.py <plot_6_unconformities.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
